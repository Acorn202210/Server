<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.acorn2.FinalProject.lectureStudent.dao.LectureStudentDao">

	<select id="SelectLectureStudentCount" parameterType="com.acorn2.FinalProject.lectureStudent.dto.req.LectureStudentReadReqDto" resultType="java.lang.Integer">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM LECTURE_STUDENT
	</select>
	
	<select id="LectureStudentList" parameterType="com.acorn2.FinalProject.lectureStudent.dto.req.LectureStudentReadReqDto" resultType="com.acorn2.FinalProject.lectureStudent.dto.res.LectureStudentReadResDto">
	  SELECT *
			FROM	
				(SELECT result1.*, ROWNUM as rnum
				FROM
					(SELECT users.id,TO_CHAR(birth,'YYYY-MM-DD') birth, phone, email, User_Regdate, large_category, small_category
					FROM users 
					JOIN LECTURE_STUDENT
					ON users.id=LECTURE_STUDENT.lec_Stu_User_Id
					JOIN LECTURE 
					on LECTURE.lec_Num=LECTURE_STUDENT.lec_Stu_Ref_Group
					
					<where>
						<if test="lecStuUserId != null">AND lec_Stu_User_Id LIKE '%'||#{lecStuUserId}||'%'</if>
						<if test="birth != null">AND birth LIKE '%'||#{birth}||'%'</if>
						<if test="phone != null">AND phone LIKE '%'||#{phone}||'%'</if>
						<if test="email != null">AND email LIKE '%'||#{email}||'%'</if>
						<if test="userRegdate != null">AND userRegdate LIKE '%'||#{userRegdate}||'%'</if>
						<if test='smallCategory=="0"'>AND large_category=#{largeCategory}</if>
						<if test="smallCategory!=null">AND large_category=#{largeCategory} AND small_category=#{smallCategory}</if>
					</where>
					ORDER BY users.id DESC) result1)				
			<![CDATA[		
			WHERE rnum BETWEEN #{rowStart} AND #{rowEnd}
			]]>
	</select>
	
    <select id="studentDataOne" parameterType="int" resultType="com.acorn2.FinalProject.lectureStudent.dto.req.LectureStudentOneReadReqDto">
		SELECT lec_Stu_Num,lec_Stu_User_Id,lec_Stu_Ref_Group,Complete_Yn,User_Regdate,Update_Date 
		FROM LECTURE_STUDENT
		WHERE lec_Stu_Num=#{lecStuNum}
	</select>
	
	<update id="LectureCompleteYn" parameterType="lectureStudentDto">
		UPDATE LECTURE_STUDENT
		SET Complete_Yn=#{completeYn}, Update_Date=SYSDATE
		WHERE lec_Stu_Num=#{lecStuNum}
	</update>
	
	<insert id="LectureSignup" parameterType="lectureStudentDto">
	  INSERT INTO LECTURE_STUDENT
			(lec_Stu_Num, lec_Stu_User_Id, lec_Stu_Ref_Group, User_Regdate)
			VALUES(LECTURE_STUDENT_seq.NEXTVAL, #{lecStuUserId}, #{lecStuRefGroup}, SYSDATE)
    </insert>
	
	
	<select id="getSequence" resultType="int">
      SELECT LECTURE_STUDENT_seq.NEXTVAL
      FROM DUAL
    </select>
   
</mapper>